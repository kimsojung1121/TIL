<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.itwill.mapper.MyHewonMapper">
	<insert id="insertHewon" parameterType="MyHewon">
		insert into myhewon values(#{id},#{name},#{phone},#{email},#{state})
	</insert>
	
	<resultMap type="MyHewon" id="myHewonResultMap">
		<id column="hewon_id" property="id"/>
		<result column="hewon_name" property="name"/>
		<result column="hewon_phone" property="phone"/>
		<result column="hewon_email" property="email"/>
		<result column="hewon_state" property="state"/>
	</resultMap>
	
	<select id="selectHewonList" resultMap="myHewonResultMap">
		select * from myhewon order by hewon_id
	</select>
	
	<!-- discriminator : 검색행의 컬럼값을 비교하여 다른 매핑정보를 제공하기 위한 상위 엘리먼트 -->
	<!-- => 하위 엘리먼트 : case 엘리먼트 -->
	<!-- javaType 속성 : 비교 컬럼에 대한 Java 자료형을 속성값으로 설정 -->
	<!-- column 속성 : 비교 컬럼명을 속성값으로 설정 -->
	<!-- case : 검색 컬럼값을 비교하여 같은 경우 매핑정보를 제공하기 위한 엘리먼트 -->
	<!-- value 속성 : 검색 컬럼값과 비교할 값을 속성값으로 설정 -->
	<!--  
	<resultMap type="MyHewon" id="myHewonDiscriminatorResultMap">
		<discriminator javaType="int" column="hewon_state">
			<case value="1">
				<id column="hewon_id" property="id"/>
				<result column="hewon_state" property="state"/>
			</case>
			<case value="2">
				<id column="hewon_id" property="id"/>
				<result column="hewon_name" property="name"/>
				<result column="hewon_state" property="state"/>
			</case>
			<case value="3">
				<id column="hewon_id" property="id"/>
				<result column="hewon_name" property="name"/>
				<result column="hewon_phone" property="phone"/>
				<result column="hewon_state" property="state"/>
			</case>
			<case value="4">
				<id column="hewon_id" property="id"/>
				<result column="hewon_name" property="name"/>
				<result column="hewon_phone" property="phone"/>
				<result column="hewon_email" property="email"/>
				<result column="hewon_state" property="state"/>
			</case>
		</discriminator>
	</resultMap>
	-->
	
	<!-- case 엘리먼트에서 제공하는 공통적인 매핑정보는 id 엘리먼트 또는 result 엘리먼트로 설정 -->
	<!--  
	<resultMap type="MyHewon" id="myHewonDiscriminatorResultMap">
		<id column="hewon_id" property="id"/>
		<result column="hewon_state" property="state"/>
		<discriminator javaType="int" column="hewon_state">
			<case value="2">
				<result column="hewon_name" property="name"/>
			</case>
			<case value="3">
				<result column="hewon_name" property="name"/>
				<result column="hewon_phone" property="phone"/>
			</case>
			<case value="4">
				<result column="hewon_name" property="name"/>
				<result column="hewon_phone" property="phone"/>
				<result column="hewon_email" property="email"/>
			</case>
		</discriminator>
	</resultMap>
	-->
	
	<resultMap type="MyHewon" id="myHewonDiscriminatorResultMap">
		<discriminator javaType="int" column="hewon_state">
			<!-- resultMap 속성 : resultMap 엘리먼트의 식별자를 속성값으로 설정 -->
			<!-- => resultMap 엘리먼트의 매핑정보를 제공받아 사용  -->
			<case value="1" resultMap="myHewonOneResultMap"/>
			<case value="2" resultMap="myHewonTwoResultMap"/>
			<case value="3" resultMap="myHewonThreeResultMap"/>
			<case value="4" resultMap="myHewonFourResultMap"/>
		</discriminator>
	</resultMap>
	
	<resultMap type="MyHewon" id="myHewonOneResultMap">
		<id column="hewon_id" property="id"/>
		<result column="hewon_state" property="state"/>
	</resultMap>
	
	<!-- extents 속성 : resultMap 엘리먼트의 식별자를 속성값으로 설정 -->
	<!-- => resultMap 엘리먼트의 매핑정보를 상속받아 사용 -->
	<resultMap type="MyHewon" id="myHewonTwoResultMap" extends="myHewonOneResultMap">
		<result column="hewon_name" property="name"/>
	</resultMap>
	
	<resultMap type="MyHewon" id="myHewonThreeResultMap" extends="myHewonTwoResultMap">
		<result column="hewon_phone" property="phone"/>
	</resultMap>
	
	<resultMap type="MyHewon" id="myHewonFourResultMap" extends="myHewonThreeResultMap">
		<result column="hewon_email" property="email"/>
	</resultMap>
	
	<select id="selectDiscriminatorHewonList" resultMap="myHewonDiscriminatorResultMap">
		select * from myhewon order by hewon_id
	</select>
	
	<!-- SQL 명령 작성에 필요한 값을 전달하는 방법 -->
	<!-- => 전달값은 SQL 명령에서 #{변수명|필드명|맵키} 형식으로 표현 -->
	<!-- 1.XML 맵퍼에서 SQL 명령이 등록된 엘리먼트의 parameterType 속성값으로 Java
	자료형(별칭)을 이용하여 값을 전달받아 사용 -->
	<!-- => 속성값으로 기본형(Wrapper 클래스) 또는 String 클래스를 설정 - 단일값(변수명) -->
	<!-- => 속성값으로 DTO 클래스를 설정 - 다수값(필드명) -->
	<!-- => 속성값으로 HashMap 클래스(Map 인터페이스)를 설정 - 다수값(맵키) -->
	
	<!-- 공개범위를 전달받아 MYHEWON 테이블에 저장된 해당 공개범위의 회원정보를 검색하여 반환하는 엘리먼트 -->
	<!-- 기본형(Wrapper 클래스) 또는 String 클래스를 속성값으로 설정한 경우 하나의 값을
	전달받아 #{변수명} 형식으로 표현하여 SQL 명령 작성 - 변수명은 형식에 맞게 작성 -->
	<!--  
	<select id="selectStateHewonList" parameterType="int" resultMap="myHewonResultMap">
		select * from myhewon where hewon_state=#{state} order by hewon_id
	</select>
	-->
	
	<!-- 기본형(Wrapper 클래스) 또는 String 클래스가 속성값인 경우 parameterType 속성 생략 가능 -->
	<!-- => Interface 맵퍼와 바인딩된 경우에는 속성값에 상관없이 parameterType 속성 생략 가능 -->
	<select id="selectStateHewonList" resultMap="myHewonResultMap">
		select * from myhewon where hewon_state=#{state} order by hewon_id
	</select>
	
	<!-- 이름과 전화번호를 전달받아 MYHEWON 테이블에 저장된 해당 회원의 아이디를 검색하여 반환하는 엘리먼트 -->
	<!-- DTO 클래스를 속성값으로 설정한 경우 여러개의 값을 인스턴스 필드로 전달받아
	#{필드명} 형식으로 표현하여 SQL 명령 작성 -->
	<select id="selectBeanHewonId" parameterType="MyHewon" resultType="string">
		select hewon_id from myhewon where hewon_name=#{name} and hewon_phone=#{phone}
	</select>
	
	<!-- 이름과 전화번호를 전달받아 MYHEWON 테이블에 저장된 해당 회원의 아이디를 검색하여 반환하는 엘리먼트 -->
	<!-- HashMap 클래스(Map 인터페이스)를 속성값으로 설정한 경우 여러개의 값을 맵값으로
	전달받아 #{맵키} 형식으로 표현하여 SQL 명령 작성 -->
	<!-- => Map 인스턴스의 Getter 메소드가 자동 호출되어 맵키에 대한 맵값을 제공받아 사용 -->
	<!-- => DTO 클래스의 필드값과 상관없는 SQL 명령을 작성해야될 경우 사용 -->
	<select id="selectMapHewonId" parameterType="map" resultType="string">
		select hewon_id from myhewon where hewon_name=#{name} and hewon_phone=#{phone}
	</select>
</mapper>








